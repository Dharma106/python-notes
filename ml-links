https://missinglink.ai/guides/neural-network-concepts/complete-guide-artificial-neural-networks/

https://cs231n.github.io/

https://statisticsbyjim.com/regression/gauss-markov-theorem-ols-blue/

https://www.microsoft.com/en-us/research/people/cmbishop/?from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fum%2Fpeople%2Fcmbishop%2Fprml%2F

import requests
import win32com.client as win32
import os
import PyPDF2

def download_report(url, dest_loc, pdf_name_to_save):
    download_file = requests.get(url)
    country_name = pdf_name_to_save.split("_")[0]
    if download_file.status_code == 200:
        # published_report_lst.append(pdf_name_to_save)        
        print(f'{country_name} report is avilable and downloaded.')
        with open(dest_loc+"//" + pdf_name_to_save, "wb") as pdf_file:
            pdf_file.write(download_file.content)
        status = pdf_name_to_save
    else:
        print(f"{country_name} report is not available!")   
        status = None
    return status
 
 def report_summary(folder_loc, pdf_name):
    read_pdf = open(os.path.join(folder_loc, pdf_name),"rb")
    # using PyPDF2 to read the content of the pdf using PdfFileReader content
    
    pypdf_reader = PyPDF2.PdfFileReader(read_pdf) 
    # required page content reading
    pdf_content = pypdf_reader.getPage(0)
    extract_text = pdf_content.extractText()
    extract_text = extract_text.lstrip()
    split_text = extract_text.splitlines()
    str_wrd_srch = [" Report Highlights:", "Report Highlights: ",
                    'Report Highlights:  ', " Report Highlights: ",
                    "Report Highlights:"]        
    for wrd in str_wrd_srch:
        try:
            keywrd_pos = split_text.index(wrd)
        except ValueError:
            pass            
    required_text = split_text[keywrd_pos+1:]
    final_text = pdf_name.split("_")[0] + ": "
    for line in required_text:
        final_text = final_text + line.rstrip() + " "
    final_text = final_text.rstrip()
    return final_text
    
def send_mail(file_loc, attachment_lst,
              mail_to = None, mail_cc= None,
              sub="", write_up= " "):
    if mail_to == None and mail_cc == None:
        raise SystemExit('Either To or CC is missing')
        
    outlook_app = win32.Dispatch("outlook.Application")
    mail_item = outlook_app.CreateItem(0)
    mail_item.Subject = sub
    mail_item.Body = write_up    
    # file_loc = str(file_loc)    
    for attachment in attachment_lst:
        attach_loc = os.path.join(file_loc, attachment)
        mail_item.Attachments.Add(attach_loc) 
        
    if mail_to == None:
        mail_item.CC = mail_cc
    elif mail_cc == None:
        mail_item.To = mail_to
    else:
        mail_item.To = mail_to
        mail_item.CC = mail_cc 
    # mail_item.Display(True)
    print("... mail is just a few seconds away ...")
    mail_item.Send()
    print("........")
    print("Mail has been sent")
  

import os, sys
import datetime as dt
import numpy as np
cur_dir = os.getcwd()
req_dir = "../../"
os.chdir(req_dir)
from download_usda_generate_report import download_report,report_summary, send_mail
os.chdir(cur_dir)

dest_folder= "../../"
report_url_prt1 = "https://apps.fas.usda.gov/newgainapi/api/Report"
report_url_prt2 = "DownloadReportByFileName?fileName="
report_url_semi_annual = "Coffee%20Semi-annual_"
report_url_annual = "Coffee%20Annual_"
country_list = {"Brazil": "Sao%20Paulo%20ATO_Brazil_",
                "Indonesia" : "Jakarta_Indonesia_",
                "Vietnam" : "Hanoi_Vietnam_", 
                "India" : "New%20Delhi_India_",
                "Uganda"  : "Nairobi_Uganda_",
                "Ethiopia" : "Addis%20Ababa_Ethiopia_",
                "Colombia": "annual_Bogota_Colombia_",
                "Nicargua" : "Managua_Nicaragua_",
                "kenya" : "Nairobi_Kenya_",
                "CostaRica" : "San%20Jose_Costa%20Rica_",
                "Ecuador" : "Quito_Ecuador_",
                "Guatemala" : "Guatemala%20City_Guatemala_",
                "Honduras" : "Tegucigalpa_Honduras_",
                "Mexico" : "Mexico%20City_Mexico_",
                "Peru" : "Lima_Peru_", 
                "Tanzania" : "Nairobi_Tanzania_", 
                "Venezuela" : "Caracas_Venezuela_",
                "ElSalvador" : "San%20Salvador_El%20Salvador_"                
                }

today_date = dt.datetime.today()
req_url_date = dt.date.strftime(today_date,"%m-%d-%Y")
date_list = ['5-13-2019', '5-15-2018', '6-9-2017',
              '4-23-2019', '5-15-2019','5-31-2019', 
              '11-15-2019']
req_url_date = date_list[-1] 

if today_date.month <=7:
    req_base_url = report_url_prt1 + "//"+ report_url_prt2 + report_url_annual
    report_name = "annual_report_" + req_url_date +".pdf"
else:
    req_base_url = report_url_prt1 + "//"+ report_url_prt2 + report_url_semi_annual
    report_name = "semi_annual_report_" + req_url_date +".pdf"

req_base_url = report_url_prt1 + "//"+ report_url_prt2 + report_url_semi_annual
report_name = "semi_annual_report_" + req_url_date +".pdf"

country_url_list = []
pdf_names = []
for country_name ,country_url in country_list.items():
    pdf_names.append(country_name + "_" + report_name)
    country_url_list.append(req_base_url + country_url + req_url_date + ".pdf") 

files_in_dest_folder = os.listdir(dest_folder)
file_exists_status = np.isin(pdf_names, files_in_dest_folder, 
                              invert =True)
pdf_names = np.array(pdf_names)[file_exists_status]
country_url_list = np.array(country_url_list)[file_exists_status]


download_report_vec = np.vectorize(download_report)     
published_report_lst = download_report_vec(country_url_list,
                                            dest_folder, 
                                            pdf_names)
                                            
 
if sum(published_report_lst != np.array('None')) != 0: 
    published_report_lst = published_report_lst[published_report_lst !=
                                            np.array('None')]
    report_outline = [report_summary(dest_folder, pdf) for 
                      pdf in published_report_lst]      
    mail_body_prt1 = "Dear All, \n\nAttached is the latest coffee report published by USDA.\n\nHere are Highlights from the published Report."
    report_outline.insert(0, mail_body_prt1)
    report_outline.append("\nRegards \nDharmendra")
    mail_body = "\n\n".join(report_outline)    
    mail_to = ".."
    
    subject = "Latest USDA " + " ".join(report_name.split("_")[0:3])    
    send_mail(mail_to = mail_to, file_loc = dest_folder, sub = subject,
              attachment_lst = published_report_lst,
              write_up = mail_body)
else:
    sys.exit("No Reports available!")
    
   
                         
